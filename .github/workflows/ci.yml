name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ '*-v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth-service, user-service, timetracking-service, gateway]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ${{ matrix.service }}/package-lock.json
    
    - name: Install dependencies
      run: |
        cd ${{ matrix.service }}
        npm ci
    
    - name: Run linting
      run: |
        cd ${{ matrix.service }}
        npm run lint
    
    - name: Run tests
      run: |
        cd ${{ matrix.service }}
        npm run test
    
    - name: Build service
      run: |
        cd ${{ matrix.service }}
        npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        service: [auth-service, user-service, timetracking-service, gateway]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Extract service and version from tag
      id: extract
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        SERVICE=$(echo $TAG | cut -d'-' -f1-2)
        VERSION=$(echo $TAG | cut -d'v' -f2)
        echo "service=$SERVICE" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "tag=$TAG" >> $GITHUB_OUTPUT
    
    - name: Skip if not matching service
      if: steps.extract.outputs.service != matrix.service
      run: echo "Skipping ${{ matrix.service }} as tag is for ${{ steps.extract.outputs.service }}"
    
    - name: Set up Docker Buildx
      if: steps.extract.outputs.service == matrix.service
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: steps.extract.outputs.service == matrix.service
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      if: steps.extract.outputs.service == matrix.service
      uses: docker/build-push-action@v5
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ steps.extract.outputs.version }}
          ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  integration-test:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Start services with Docker Compose
      run: |
        docker-compose up -d
        sleep 30
    
    - name: Health check
      run: |
        curl -f http://localhost:3000/health || exit 1
        curl -f http://localhost:5001/health || exit 1
        curl -f http://localhost:5002/health || exit 1
        curl -f http://localhost:5003/health || exit 1
    
    - name: Stop services
      run: docker-compose down