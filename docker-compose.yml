version: '3.8'

services:
  # Databases
  auth-postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
    ports:
      - "5432:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  timetracking-postgres:
    image: postgres:15-alpine
    container_name: timetracking-postgres
    environment:
      POSTGRES_DB: timetracking_db
      POSTGRES_USER: timetracking_user
      POSTGRES_PASSWORD: timetracking_password
    ports:
      - "5433:5432"
    volumes:
      - timetracking_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  employee-postgres:
    image: postgres:15-alpine
    container_name: employee-postgres
    environment:
      POSTGRES_DB: employee_db
      POSTGRES_USER: employee_user
      POSTGRES_PASSWORD: employee_password
    ports:
      - "5434:5432"
    volumes:
      - employee_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  shift-postgres:
    image: postgres:15-alpine
    container_name: shift-postgres
    environment:
      POSTGRES_DB: shift_db
      POSTGRES_USER: shift_user
      POSTGRES_PASSWORD: shift_password
    ports:
      - "5435:5432"
    volumes:
      - shift_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  payroll-postgres:
    image: postgres:15-alpine
    container_name: payroll-postgres
    environment:
      POSTGRES_DB: payroll_db
      POSTGRES_USER: payroll_user
      POSTGRES_PASSWORD: payroll_password
    ports:
      - "5436:5432"
    volumes:
      - payroll_postgres_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  user-mongodb:
    image: mongo:7-jammy
    container_name: user-mongodb
    environment:
      MONGO_INITDB_DATABASE: user_db
    ports:
      - "27017:27017"
    volumes:
      - user_mongodb_data:/data/db
    networks:
      - microservices-network

  # Microservices
  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      PORT: 5001
      DB_HOST: auth-postgres
      DB_PORT: 5432
      DB_USERNAME: auth_user
      DB_PASSWORD: auth_password
      DB_DATABASE: auth_db
      JWT_SECRET: auth-jwt-secret-key-change-this-in-production
      JWT_EXPIRES_IN: 24h
    ports:
      - "5001:5001"
    depends_on:
      - auth-postgres
    networks:
      - microservices-network
    restart: unless-stopped

  user-service:
    build: ./user-service
    container_name: user-service
    environment:
      NODE_ENV: development
      PORT: 5002
      MONGODB_URI: mongodb://user-mongodb:27017/user_db
    ports:
      - "5002:5002"
    volumes:
      - ./user-service/src:/app/src
      - ./user-service/package.json:/app/package.json
    command: npm run start:dev
    depends_on:
      - user-mongodb
    networks:
      - microservices-network
    restart: unless-stopped

  timetracking-service:
    build: ./timetracking-service
    container_name: timetracking-service
    environment:
      PORT: 5003
      DB_HOST: timetracking-postgres
      DB_PORT: 5432
      DB_USERNAME: timetracking_user
      DB_PASSWORD: timetracking_password
      DB_DATABASE: timetracking_db
    ports:
      - "5003:5003"
    depends_on:
      - timetracking-postgres
    networks:
      - microservices-network
    restart: unless-stopped

  employee-service:
    build: ./employee-service
    container_name: employee-service
    environment:
      PORT: 5004
      DB_HOST: employee-postgres
      DB_PORT: 5432
      DB_USERNAME: employee_user
      DB_PASSWORD: employee_password
      DB_DATABASE: employee_db
    ports:
      - "5004:5004"
    depends_on:
      - employee-postgres
    networks:
      - microservices-network
    restart: unless-stopped

  shift-management-service:
    build: ./shift-management-service
    container_name: shift-management-service
    environment:
      PORT: 5005
      DB_HOST: shift-postgres
      DB_PORT: 5432
      DB_USERNAME: shift_user
      DB_PASSWORD: shift_password
      DB_DATABASE: shift_db
      TIMEZONEDB_API_KEY: ${TIMEZONEDB_API_KEY:-}
    ports:
      - "5005:5005"
    depends_on:
      - shift-postgres
    networks:
      - microservices-network
    restart: unless-stopped

  payroll-service:
    build: ./payroll-service
    container_name: payroll-service
    environment:
      PORT: 5006
      DB_HOST: payroll-postgres
      DB_PORT: 5432
      DB_USERNAME: payroll_user
      DB_PASSWORD: payroll_password
      DB_DATABASE: payroll_db
    ports:
      - "5006:5006"
    depends_on:
      - payroll-postgres
    networks:
      - microservices-network
    restart: unless-stopped

  # GraphQL Gateway
  gateway:
    build: ./gateway
    container_name: graphql-gateway
    environment:
      NODE_ENV: development
      PORT: 3000
      AUTH_SERVICE_URL: http://auth-service:5001
      USER_SERVICE_URL: http://user-service:5002
      TIMETRACKING_SERVICE_URL: http://timetracking-service:5003
      EMPLOYEE_SERVICE_URL: http://employee-service:5004
      SHIFT_SERVICE_URL: http://shift-management-service:5005
      PAYROLL_SERVICE_URL: http://payroll-service:5006
      JWT_SECRET: auth-jwt-secret-key-change-this-in-production
    ports:
      - "3000:3000"
    volumes:
      - ./gateway/src:/app/src
      - ./gateway/package.json:/app/package.json
    command: npm run start:dev
    depends_on:
      - auth-service
      - user-service
      - timetracking-service
      - employee-service
      - shift-management-service
      - payroll-service
    networks:
      - microservices-network
    restart: unless-stopped

volumes:
  auth_postgres_data:
  timetracking_postgres_data:
  employee_postgres_data:
  shift_postgres_data:
  payroll_postgres_data:
  user_mongodb_data:

networks:
  microservices-network:
    driver: bridge